<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>true</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt-EncodeQuery-CountState</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {	

	var stateValue = "";
	var aState = "Awaiting Approval";
	var wState = "Awaiting Feedback";
	var uState = "Undefined";
	var count_A = 0;
	var count_W = 0;
	var count_Undefined = 0;
	
	var myObj = new GlideRecord("x_58872_needit_needit");														myObj.addEncodedQuery("u_when_needed<=javascript:gs.endOfToday()^active=true^state=14^ORactive=true^state=16");
	
	myObj.query();
	
	try{
		countState(myObj);
	}
	catch(err){
		gs.error("NeedIt App: a JavaScript runtime error occurred - " + err);
	} 	
	
	// This function is not defined and is not part of a try/catch
	function countState(myObj)
	{		
		
		while(myObj.next()){
			// Logic you want to execute for the GlideRecord records
			stateValue += myObj.getValue('state') + ",";			
		}
		stateValue = trimRegex(stateValue);
		gs.addInfoMessage(stateValue);
		writeState(stateValue);				
	} 	
	
	function writeState(stateValue)
	{
		splitV = stateValue.trim().split(',');
		var L = splitV.length;
		for(var i=0; i < L; i++){
			
			if(splitV[i] == 14){
				count_A += 1;			
			}
			else if (splitV[i] == 16){
				count_W += 1;					
			}
			else if (splitV[i] != 14 && splitV[i] != 16){
				count_Undefined += 1;
			}
		}			
				
		aState = count_A > 0 ? aState : "No " + aState;
		wState = count_W > 0 ? wState : "No " + wState;
		uState = count_Undefined > 0 ? uState : " No " + uState;  
		gs.addInfoMessage(uState + " count: " + count_Undefined + " " + aState + " count: " + count_A +"\r"+ wState + " count: " + count_W);
	}
	
	function trimRegex(x)
	{
		var rex = x.match(/undefined/g);
		x = x.replace(rex, '').replace(/^\s+$/gm, '');
		return x.trim();
	} 	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-02 17:51:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bf2f5575db93c01088ad2706ca961913</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>NeedIt-EncodeQuery-CountState</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_bf2f5575db93c01088ad2706ca961913</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-05 16:59:24</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=bf2f5575db93c01088ad2706ca961913"/>
</record_update>
